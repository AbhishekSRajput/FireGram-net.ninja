{"version":3,"sources":["firebase/firebase.config.js","hooks/UseFirestore.jsx","components/ImageGrid.jsx","components/Modal.jsx","components/Title.js","hooks/UseStorage.jsx","components/ProgressBar.jsx","components/UploadForm.jsx","App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","projectStorage","storage","projectFirestore","firestore","timeStamp","FieldValue","serverTimestamp","UseFirestore","collection","useState","docs","setDocs","useEffect","unSub","orderBy","onSnapshot","snapshot","documents","forEach","doc","push","data","id","ImageGrid","setSelectedImage","console","log","className","map","div","layout","whileHover","opacity","onClick","url","img","src","alt","initial","animate","transition","delay","Modal","selectedImage","e","target","classList","contains","y","Title","useStorage","file","progress","setProgress","error","setError","setUrl","storageRef","ref","name","collectionRef","put","on","percentage","bytesTransferred","totalBytes","a","getDownloadURL","createdAt","add","ProgressBar","setFile","UseStorage","width","UploadForm","types","type","onChange","selected","files","includes","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wNAiBAA,IAASC,cAXc,CACtBC,OAAQ,0CACRC,WAAY,0CACZC,UAAW,0BACXC,cAAe,sCACfC,kBAAmB,eACnBC,MAAO,8CAQD,IAAMC,EAAiBR,IAASS,UAE1BC,EAAmBV,IAASW,YAE5BC,EAAYZ,IAASW,UAAUE,WAAWC,gBCExCC,EAvBM,SAACC,GAAgB,IAAD,EACZC,mBAAS,IADG,mBAC7BC,EAD6B,KACvBC,EADuB,KAoBpC,OAjBAC,qBAAU,WACT,IAAMC,EAAQX,EACZM,WAAWA,GACXM,QAAQ,YAAa,QACrBC,YAAW,SAACC,GACZ,IAAIC,EAAY,GAEhBD,EAASE,SAAQ,SAACC,GACjBF,EAAUG,KAAV,2BAAoBD,EAAIE,QAAxB,IAAgCC,GAAIH,EAAIG,SAGzCX,EAAQM,MAGV,OAAO,kBAAMJ,OACX,CAACL,IAEG,CAAEE,S,QCUKa,EA7BG,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,iBACZd,EAASH,EAAa,UAAtBG,KAER,OADAe,QAAQC,IAAIhB,GAEX,qBAAKiB,UAAU,WAAf,SACEjB,GACAA,EAAKkB,KAAI,SAACT,GACT,OACC,cAAC,IAAOU,IAAR,CACCC,QAAM,EACNC,WAAY,CAAEC,QAAS,GACvBL,UAAU,WAEVM,QAAS,kBAAMT,EAAiBL,EAAIe,MALrC,SAOC,cAAC,IAAOC,IAAR,CACCC,IAAKjB,EAAIe,IACTG,IAAI,gBACJC,QAAS,CAAEN,QAAS,GACpBO,QAAS,CAAEP,QAAS,GACpBQ,WAAY,CAAEC,MAAO,MARjBtB,EAAIG,UCUDoB,EAvBD,SAAC,GAAyC,IAAvCC,EAAsC,EAAtCA,cAAenB,EAAuB,EAAvBA,iBAM/B,OACC,cAAC,IAAOK,IAAR,CACCF,UAAU,WACVM,QARkB,SAACW,GAChBA,EAAEC,OAAOC,UAAUC,SAAS,aAC/BvB,EAAiB,OAOjBc,QAAS,CAAEN,QAAS,GACpBO,QAAS,CAAEP,QAAS,GAJrB,SAMC,cAAC,IAAOG,IAAR,CACCC,IAAKO,EACLN,IAAI,gBACJC,QAAS,CAAEU,EAAG,UACdT,QAAS,CAAES,EAAG,QCRHC,EAVD,WACZ,OACE,sBAAKtB,UAAU,QAAf,UACE,0CACA,+CACA,6F,yBCiCSuB,EAhCI,SAACC,GAAU,IAAD,EACI1C,mBAAS,GADb,mBACrB2C,EADqB,KACXC,EADW,OAEF5C,mBAAS,MAFP,mBAErB6C,EAFqB,KAEdC,EAFc,OAGN9C,mBAAS,MAHH,mBAGrByB,EAHqB,KAGhBsB,EAHgB,KA6B5B,OAxBA5C,qBAAU,WAET,IAAM6C,EAAazD,EAAe0D,IAAIP,EAAKQ,MACrCC,EAAgB1D,EAAiBM,WAAW,UAElDiD,EAAWI,IAAIV,GAAMW,GACpB,iBACA,SAAC9C,GACA,IAAI+C,EACF/C,EAASgD,iBAAmBhD,EAASiD,WAAc,IACrDZ,EAAYU,MAEb,SAACT,GACAC,EAASD,KARX,sBAUC,8BAAAY,EAAA,sEACmBT,EAAWU,iBAD9B,OACOjC,EADP,OAEOkC,EAAYhE,IAClBwD,EAAcS,IAAI,CAAEnC,IAAKA,EAAKkC,cAC9BZ,EAAOtB,GAJR,8CAOC,CAACiB,IAEG,CAAEC,WAAUE,QAAOpB,QCdZoC,EAnBK,SAAC,GAAuB,IAArBnB,EAAoB,EAApBA,KAAMoB,EAAc,EAAdA,QAAc,EAChBC,EAAWrB,GAA7BjB,EADkC,EAClCA,IAAKkB,EAD6B,EAC7BA,SASb,OARA3B,QAAQC,IAAI0B,EAAUlB,GAEtBtB,qBAAU,WACLsB,GACHqC,EAAQ,QAEP,CAACrC,EAAKqC,IAGR,cAAC,IAAO1C,IAAR,CACCF,UAAU,eACVW,QAAS,CAAEmC,MAAO,GAClBlC,QAAS,CAAEkC,MAAOrB,EAAW,QCkBjBsB,EAjCI,WAAO,IAAD,EACAjE,mBAAS,MADT,mBACjB0C,EADiB,KACXoB,EADW,OAEE9D,mBAAS,MAFX,mBAEjB6C,EAFiB,KAEVC,EAFU,KAIlBoB,EAAQ,CAAC,YAAa,aAAc,aAc1C,OACC,iCACC,kCACC,uBAAOC,KAAK,OAAOC,SAfD,SAACjC,GACrB,IAAIkC,EAAWlC,EAAEC,OAAOkC,MAAM,GAE1BD,GAAYH,EAAMK,SAASF,EAASF,OACvCL,EAAQO,GACRvB,EAAS,MAETgB,EAAQ,MACRhB,EAAS,8CAQR,wCAGD,sBAAK5B,UAAU,SAAf,UACE2B,GAAS,qBAAK3B,UAAU,QAAf,SAAwB2B,IACjCH,GAAQ,8BAAMA,EAAKQ,OACnBR,GAAQ,cAAC,EAAD,CAAaA,KAAMA,EAAMoB,QAASA,WCPhCU,MAlBf,WAAgB,IAAD,EAC4BxE,mBAAS,MADrC,mBACPkC,EADO,KACQnB,EADR,KAGd,OACC,sBAAKG,UAAU,MAAf,UACC,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,CAAWH,iBAAkBA,IAC5BmB,GACA,cAAC,EAAD,CACCA,cAAeA,EACfnB,iBAAkBA,QCZvB0D,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.8893c211.chunk.js","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/storage';\n\n//web Apps firebase configurations\n\nconst firebaseConfig = {\n\tapiKey: 'AIzaSyDLlZMBPF3xLFwc03eMTzkMgmY0koEqsS0',\n\tauthDomain: 'firegram-netninja-4eb3e.firebaseapp.com',\n\tprojectId: 'firegram-netninja-4eb3e',\n\tstorageBucket: 'firegram-netninja-4eb3e.appspot.com',\n\tmessagingSenderId: '476110921398',\n\tappId: '1:476110921398:web:6fa2af11e34a1d767b5017',\n};\n\n//initialize firebase app\n\nfirebase.initializeApp(firebaseConfig);\n\n// Anything with interaction with backend storage we will call this constant\nexport const projectStorage = firebase.storage();\n//anytime we want to interact with firestore database we will call this constant\nexport const projectFirestore = firebase.firestore();\n\nexport const timeStamp = firebase.firestore.FieldValue.serverTimestamp;\n","import { useState, useEffect } from 'react';\nimport { projectFirestore } from '../firebase/firebase.config';\n\nconst UseFirestore = (collection) => {\n\tconst [docs, setDocs] = useState([]);\n\n\tuseEffect(() => {\n\t\tconst unSub = projectFirestore\n\t\t\t.collection(collection)\n\t\t\t.orderBy('createdAt', 'desc')\n\t\t\t.onSnapshot((snapshot) => {\n\t\t\t\tlet documents = [];\n\n\t\t\t\tsnapshot.forEach((doc) => {\n\t\t\t\t\tdocuments.push({ ...doc.data(), id: doc.id });\n\t\t\t\t});\n\n\t\t\t\tsetDocs(documents);\n\t\t\t});\n\n\t\treturn () => unSub();\n\t}, [collection]);\n\n\treturn { docs };\n};\n\nexport default UseFirestore;\n","import React from 'react';\nimport UseFirestore from '../hooks/UseFirestore';\nimport { motion } from 'framer-motion';\n\nconst ImageGrid = ({ setSelectedImage }) => {\n\tconst { docs } = UseFirestore('images');\n\tconsole.log(docs);\n\treturn (\n\t\t<div className=\"img-grid\">\n\t\t\t{docs &&\n\t\t\t\tdocs.map((doc) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<motion.div\n\t\t\t\t\t\t\tlayout\n\t\t\t\t\t\t\twhileHover={{ opacity: 1 }}\n\t\t\t\t\t\t\tclassName=\"img-wrap\"\n\t\t\t\t\t\t\tkey={doc.id}\n\t\t\t\t\t\t\tonClick={() => setSelectedImage(doc.url)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<motion.img\n\t\t\t\t\t\t\t\tsrc={doc.url}\n\t\t\t\t\t\t\t\talt=\"firebase pics\"\n\t\t\t\t\t\t\t\tinitial={{ opacity: 0 }}\n\t\t\t\t\t\t\t\tanimate={{ opacity: 1 }}\n\t\t\t\t\t\t\t\ttransition={{ delay: 1 }}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</motion.div>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t</div>\n\t);\n};\n\nexport default ImageGrid;\n","import React from 'react';\nimport { motion } from 'framer-motion';\n\nconst Modal = ({ selectedImage, setSelectedImage }) => {\n\tconst handleClick = (e) => {\n\t\tif (e.target.classList.contains('backdrop')) {\n\t\t\tsetSelectedImage(null);\n\t\t}\n\t};\n\treturn (\n\t\t<motion.div\n\t\t\tclassName=\"backdrop\"\n\t\t\tonClick={handleClick}\n\t\t\tinitial={{ opacity: 0 }}\n\t\t\tanimate={{ opacity: 1 }}\n\t\t>\n\t\t\t<motion.img\n\t\t\t\tsrc={selectedImage}\n\t\t\t\talt=\"enlarged pics\"\n\t\t\t\tinitial={{ y: '-100vh' }}\n\t\t\t\tanimate={{ y: 0 }}\n\t\t\t/>\n\t\t</motion.div>\n\t);\n};\n\nexport default Modal;\n","import React from 'react';\n\nconst Title = () => {\n  return (\n    <div className=\"title\">\n      <h1>FireGram</h1>\n      <h2>Your Pictures</h2>\n      <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>\n    </div>\n  )\n}\n\nexport default Title;","import { useState, useEffect } from 'react';\n\nimport {\n\tprojectStorage,\n\tprojectFirestore,\n\ttimeStamp,\n} from '../firebase/firebase.config';\n\nconst useStorage = (file) => {\n\tconst [progress, setProgress] = useState(0);\n\tconst [error, setError] = useState(null);\n\tconst [url, setUrl] = useState(null);\n\n\tuseEffect(() => {\n\t\t//references\n\t\tconst storageRef = projectStorage.ref(file.name);\n\t\tconst collectionRef = projectFirestore.collection('images');\n\n\t\tstorageRef.put(file).on(\n\t\t\t'state__change',\n\t\t\t(snapshot) => {\n\t\t\t\tlet percentage =\n\t\t\t\t\t(snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n\t\t\t\tsetProgress(percentage);\n\t\t\t},\n\t\t\t(error) => {\n\t\t\t\tsetError(error);\n\t\t\t},\n\t\t\tasync () => {\n\t\t\t\tconst url = await storageRef.getDownloadURL();\n\t\t\t\tconst createdAt = timeStamp();\n\t\t\t\tcollectionRef.add({ url: url, createdAt });\n\t\t\t\tsetUrl(url);\n\t\t\t}\n\t\t);\n\t}, [file]);\n\n\treturn { progress, error, url };\n};\n\nexport default useStorage;\n","import React, { useEffect } from 'react';\nimport UseStorage from '../hooks/UseStorage';\nimport { motion } from 'framer-motion';\n\nconst ProgressBar = ({ file, setFile }) => {\n\tconst { url, progress } = UseStorage(file);\n\tconsole.log(progress, url);\n\n\tuseEffect(() => {\n\t\tif (url) {\n\t\t\tsetFile(null);\n\t\t}\n\t}, [url, setFile]);\n\n\treturn (\n\t\t<motion.div\n\t\t\tclassName=\"progress-bar\"\n\t\t\tinitial={{ width: 0 }}\n\t\t\tanimate={{ width: progress + '%' }}\n\t\t></motion.div>\n\t);\n};\n\nexport default ProgressBar;\n","import React, { useState } from 'react';\nimport ProgressBar from '../components/ProgressBar';\n\nconst UploadForm = () => {\n\tconst [file, setFile] = useState(null);\n\tconst [error, setError] = useState(null);\n\n\tconst types = ['image/png', 'image/jpeg', 'image/svg'];\n\n\tconst handleChange = (e) => {\n\t\tlet selected = e.target.files[0];\n\n\t\tif (selected && types.includes(selected.type)) {\n\t\t\tsetFile(selected);\n\t\t\tsetError('');\n\t\t} else {\n\t\t\tsetFile(null);\n\t\t\tsetError('please select a valid file png or jpeg');\n\t\t}\n\t};\n\n\treturn (\n\t\t<form>\n\t\t\t<label>\n\t\t\t\t<input type=\"file\" onChange={handleChange} />\n\t\t\t\t<span>+</span>\n\t\t\t</label>\n\n\t\t\t<div className=\"output\">\n\t\t\t\t{error && <div className=\"error\">{error}</div>}\n\t\t\t\t{file && <div>{file.name}</div>}\n\t\t\t\t{file && <ProgressBar file={file} setFile={setFile} />}\n\t\t\t</div>\n\t\t</form>\n\t);\n};\nexport default UploadForm;\n","import React, { useState } from 'react';\nimport ImageGrid from './components/ImageGrid';\nimport Modal from './components/Modal';\nimport Title from './components/Title';\nimport UploadForm from './components/UploadForm';\n\nfunction App() {\n\tconst [selectedImage, setSelectedImage] = useState(null);\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<Title />\n\t\t\t<UploadForm />\n\t\t\t<ImageGrid setSelectedImage={setSelectedImage} />\n\t\t\t{selectedImage && (\n\t\t\t\t<Modal\n\t\t\t\t\tselectedImage={selectedImage}\n\t\t\t\t\tsetSelectedImage={setSelectedImage}\n\t\t\t\t/>\n\t\t\t)}\n\t\t</div>\n\t);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA"],"sourceRoot":""}